<%
  function getTagValue(item) {
    const index = item.tags.indexOf(tag._id);
    return item.tagValues[index];
  }

  const tagValueList = tag.values
    ? tag.values.split('\n').map(str => str.trim())
    : [];
%>

<h2>definition</h2>

<% if (tag.definition) { %>
  <% tag.definition.split('\n').forEach(text => { %>
    <p id="show-notation">
      <%= text %>
    </p>
  <% }); %>
<% } %>

<h2>value options</h2>

<p>
  value type:
  <%= tag.valueType %>
</p>

<p>
  value options:
  <% if (!tag.values) { %>
    <i>N/A</i>
  <% } %>
</p>

<% if (tag.values) { %>
  <ul class="bullet-list">
    <% tag.values.split('\n').forEach(text => { %>
      <li id="show-notation">
        <%= text %>
      </li>
    <% }); %>
  </ul>
<% } %>

<% if (tag.tags.length) { %>
  <h2>metatags</h2>
  <%- include('../tag/_list', {item: tag}) %>
<% } %>

<hr style="margin-top: 20px;">

<h1>items with tag</h1>

<% if (tag.title === 'number of children') { %>
  <%- include('./_special-numChildren', {people: data.people, getTagValue}) %>
<% } else if (data.groupByValue) { %>
  <% modelsThatHaveTags
    .filter(model => model.name != 'Image')
    .forEach(model => {
  %>
    <%
      const singularName = model.name.toLowerCase();
      const pluralName = model.plural;

      if (!data[pluralName].length) {
        return;
      }
    %>
    <h2><%= pluralName %></h2>
    <% data.values[pluralName].forEach(tagValue => { %>
      <%
        const items = data.groupByValue[pluralName][tagValue];

        const isError = tagValue
          && tag.valueType != 1
          && !tagValueList.includes(tagValue);
      %>
      <p style="margin: 5px 0;" class="<%= isError ? 'error' : 'none' %>">
        <b><%= tagValue %></b>
      </p>
      <ul class="bullet-list">
        <% items.forEach(item => { %>
          <%
            const tagValue = getTagValue(item);
            const isError = tagValue
              && tag.valueType != 1
              && !tagValueList.includes(tagValue);
          %>
          <li>
            <%- include('../' + singularName + '/_link', {
              [singularName]: item
            }) %>
          </li>
        <% }); %>
      </ul>
    <% }); %>
  <% }); %>
<% } else { %>
  <% modelsThatHaveTags
    .filter(model => model.name != 'Image')
    .forEach(model => {
  %>
    <%
      const singularName = model.name.toLowerCase();
      const pluralName = model.plural;
      const items = data[pluralName];

      if (!items.length) {
        return;
      }
    %>
    <h2><%= pluralName %></h2>
    <ul class="bullet-list">
      <% items.forEach(item => { %>
        <%
          const tagValue = getTagValue(item);
          const isError = tagValue
            && tag.valueType != 1
            && !tagValueList.includes(tagValue);
        %>
        <li>
          <%- include('../' + singularName + '/_link', {
            [singularName]: item
          }) %>
          <% if (tagValue) { %>
            <span class="<%= isError ? 'error' : 'none' %>">
              - (<%= tagValue %>)
            </span>
          <% } %>
        </li>
      <% }); %>
    </ul>
  <% }); %>
<% } %>

<% if (data.images.length > 0) { %>
  <h2>images</h2>
  <% data.images.forEach(image => { %>
    <div style="display: inline-block; width: 200px;">
      <%- include('../image/_link', {image}) %>
      <br>
      <%= getTagValue(image) %>
    </div>
  <% }); %>
<% } %>
