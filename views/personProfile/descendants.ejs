<style>
.descendants-chart {
  padding: 10px;
  background-color: white;
}

.descendants-chart ul,
.descendants-chart li {
  /*border: 1px solid red;*/
}

.descendants-chart ul {
  margin-left: 50px;
}
.descendants-chart .person-item {
  /*border: 1px solid #ccc;*/
  margin: 8px 0;
}
.descendants-chart .person-item .life-dates {
  color: #bbb;
}
.descendants-chart a {
  color: black;
  text-decoration: none;
}
.descendants-chart a:hover {
  color: #00B7FF;
  text-decoration: underline;
}
.to-do-list {
  margin-top: 20px;
}
.generations-options {
  margin-bottom: 20px;
}
.generations-options a.selected {
  font-weight: bold;
  color: black;
}
</style>

<h2>descendants chart</h2>

<%
  const toDoList = [];
  const generationList = [['all'], [2, 2], [3, 3]];
  const baseUrl = `/person/${paramPersonId}/descendants`;
%>

<p class="generations-options">
  Show generations:
  <% generationList.forEach(([text, num], i) => { %>
    <%
      const path = num ? (baseUrl + '/generation/' + num) : baseUrl;
      const className = generationLimit === num ? 'selected' : '';
    %>
    <%= i > 0 ? '|' : '' %>
    <a href="<%= path %>" class="<%= className %>"><%= text %></a>
  <% }); %>
</p>

<div class="descendants-chart">
  <%- include('./_desc', {
    person,
    toDoList,
    generation: 0,
    generationLimit: generationLimit || 20,
  }) %>
</div>

<% if (toDoList.length) { %>
  <%
    sortBy(toDoList, item => item.priority || 10);
  %>
  <h2>missing items</h2>
  <table class="to-do-list nice-table">
    <tr>
      <th>person</th>
      <th>missing item</th>
    </tr>
    <% toDoList.forEach(item => { %>
      <%
        const person = item.person.name
          ? item.person
          : findPersonInList(people, item.person);
      %>
      <tr>
        <td>
          <%- include('../person/_link', {person}) %>
        </td>
        <td>
          <%= item.missing %>
        </td>
      </tr>
    <% }); %>
  </table>
<% } %>
