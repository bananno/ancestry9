<%
  // Settings will not be modified automatically. Change settings for desired display.
  const settings = {
    showErrors: false,
  };

  const safety = (locals.safety || 0) + 1;

  if (safety > 15) {
    throw `[ERROR] descendants chart reached ${safety} layers`;
  }

  const person = findPersonInList(people, locals.person);

  const personInfo = person.getDescendantChartInfo({
    findPersonInList,
    marriageEvents,
    people,
    toDoList,
    formatEventDate,
  });
%>

<p class="person-item">
  <b>
    <%- include('../person/_link', {
      person,
      linkText: personInfo.maidenName,
    }) %>
  </b>
  <span class="life-dates">(<%= getLifeDatesString(person) %>)</span>
  <% if (settings.showErrors && personInfo.errors.length) { %>
    <span class="error"><%= personInfo.errors.join(' ') %></span>
  <% } %>
</p>

<% personInfo.spouseList.forEach(spouseInfo => { %>
  <%
    const {
      spouse,
      spouseChildren,
      marriageEventsFormat,
      errorMessage,
    } = spouseInfo;

    const eventsList = [getLifeDatesString(spouse)];
    if (marriageEventsFormat) {
      eventsList.push(marriageEventsFormat);
    }
  %>
  <p class="person-item">
    + <%- include('../person/_link', {person: spouse}) %>
    <span class="life-dates">
      (<%= eventsList.join('; ') %>)
    </span>
    <% if (settings.showErrors && errorMessage) { %>
      <span class="error"><%= errorMessage %></span>
    <% } %>
  </p>
  <ul>
    <% spouseChildren.forEach(child => { %>
      <li>
        <%- include('./_desc', {person: child, toDoList, safety}) %>
      </li>
    <% }); %>
  </ul>
<% }); %>

<% if (personInfo.additionalChildren.length) { %>
  <p class="person-item">
    + unknown spouse
  </p>
  <ul>
    <% personInfo.additionalChildren.forEach(child => { %>
      <li>
        <%- include('./_desc', {person: child, toDoList, safety}) %>
      </li>
    <% }); %>
  </ul>
<% } %>
