<%
  const mentions = [];

  highlights.forEach(highlight => {
    let text = highlight.text;
    text = text.replace(/\(/g, '\\(').replace(/\)/g, '\\)');

    const regex = new RegExp(text, 'gi');
    const mention = {};

    const matches = source.content.match(regex);

    if (!matches) {
      mentions.push({
        _id: highlight._id,
        replaceText: highlight.text,
        skipTagging: true,
        index: -1,
        notFound: true,
        skipHighlight: true,
      });
      return;
    }

    const inBetweens = source.content.split(regex);

    let index = inBetweens[0].length;

    for (let i = 0; i < highlight.instance; i++) {
      index += matches[i].length + inBetweens[i + 1].length;
    }

    highlight.index = index;

    mentions.push({
      _id: highlight._id,
      skipTagging: !highlight.linkPerson,
      replaceText: matches[highlight.instance],
      index,
      person: highlight.linkPerson,
    });
  });

  mentions.sort((a, b) => a.index - b.index);
  highlights.sort((a, b) => a.index - b.index);

  let remainingContent = source.content;
  let contentSoFar = '';
  let lengthSoFar = 0;

  mentions.forEach((mention, i) => {
    mention.i = i;

    if (mention.index < 0) {
      return;
    }

    if (mention.index < lengthSoFar) {
      mention.overlap = true;
      mention.skipHighlight = true;
      return;
    }

    const startIndex = mention.index - lengthSoFar;
    const endIndex = startIndex + mention.replaceText.length;

    const contentBefore = remainingContent.slice(0, startIndex);
    remainingContent = remainingContent.slice(endIndex);

    lengthSoFar += contentBefore.length + mention.replaceText.length;

    contentSoFar += contentBefore + 'INSERT-MENTION-' + mention.i;
  });

  const content = contentSoFar + remainingContent;
%>

<h2>content</h2>

<%- include('../highlight/_formNew') %>
<%- include('../format/content', {content, mentions}) %>

<script src="/scripts/newHighlights.js"></script>

<h2>highlights</h2>

<%- include('../highlight/_listTable', {highlights, mentions}) %>
